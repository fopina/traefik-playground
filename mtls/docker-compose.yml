services:
  traefik:
    image: traefik:v2.9
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.webtls.address=:443
      - --entrypoints.webtls.http.tls.options=mtlsTest@file
      - --experimental.localplugins.example.modulename=github.com/traefik/plugindemo
    ports:
      - 127.0.0.1:8888:80
      - 127.0.0.1:8889:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/etc/traefik/dynamic/
      - ./plugin:/plugins-local
    labels:
      traefik.http.routers.traefik.entrypoints: web
      # port ignored, just for detection
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.routers.traefik.rule: Host(`traefik.7f000001.nip.io`)
      traefik.http.routers.traefikx.rule: Host(`traefik.7f000001.nip.io`)
      traefik.http.routers.traefikx.entrypoints: webtls
      traefik.http.routers.traefikx.tls: "true"
      traefik.http.routers.traefikx.tls.options: mtlsTest@file

  whoami:
    image: traefik/whoami
    labels:
      traefik.http.routers.whoami.entrypoints: web
      traefik.http.services.whoami.loadbalancer.server.port: 80
      traefik.http.routers.whoami.rule: Host(`whoami.7f000001.nip.io`)
      traefik.http.routers.whoamix.rule: Host(`whoami.7f000001.nip.io`)
      traefik.http.routers.whoamix.entrypoints: webtls
      traefik.http.routers.whoamix.tls: "true"
      traefik.http.routers.whoamix2.rule: Host(`whoami-tls.7f000001.nip.io`)
      traefik.http.routers.whoamix2.entrypoints: webtls
      traefik.http.routers.whoamix2.tls: "true"
      traefik.http.routers.whoamix2.middlewares: pass-certificate-info
      traefik.http.middlewares.pass-certificate-info.passTLSClientCert.info.subject.commonName: 'true'
      traefik.http.routers.whoamix2.tls.options: mtlsTest@file
  
  nginx:
    image: nginx:1.19
    labels:
      traefik.http.routers.nginx.entrypoints: web
      traefik.http.services.nginx.loadbalancer.server.port: 80
      traefik.http.routers.nginx.rule: Host(`nginx.7f000001.nip.io`)
      traefik.http.routers.nginx1.rule: Host(`nginx.7f000001.nip.io`)
      traefik.http.routers.nginx1.entrypoints: webtls
      traefik.http.routers.nginx1.tls: "true"
      traefik.http.routers.nginx2.rule: Host(`nginx-mtls.7f000001.nip.io`)
      traefik.http.routers.nginx2.entrypoints: webtls
      traefik.http.routers.nginx2.tls: "true"
      traefik.http.routers.nginx2.tls.options: mtlsTest@file
      traefik.http.routers.nginx3.rule: Host(`nginx-mtls-cn.7f000001.nip.io`)
      traefik.http.routers.nginx3.entrypoints: webtls
      traefik.http.routers.nginx3.tls: "true"
      traefik.http.routers.nginx3.tls.options: mtlsTest@file
      traefik.http.routers.nginx3.middlewares: pass-certificate-info,validate-cn
      traefik.http.routers.nginx4.rule: Host(`nginx-mtls-cn-plugin.7f000001.nip.io`)
      traefik.http.routers.nginx4.entrypoints: webtls
      traefik.http.routers.nginx4.tls: "true"
      traefik.http.middlewares.my-plugin2.plugin.example.headers.X-Forwarded-Tls-Client-Cert-Info: Subject%3D%22CN%3Dgood-client%22
      traefik.http.routers.nginx4.tls.options: mtlsTest@file
      traefik.http.routers.nginx4.middlewares: pass-certificate-info,my-plugin2

  validate-cn:
    build: cn_validator
    labels:
      traefik.http.services.validate-cn.loadbalancer.server.port: 8080
      traefik.http.middlewares.validate-cn.forwardauth.address: http://validate-cn:8080/validate
